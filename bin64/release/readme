This is the first official release of the R3X Virtual Machine for Linux 64-bit. (GL)

Please understand that the project is still in beta, and there may have been bugs that might have been overloooked  by me. This is an __unstable__ release, I'm only releasing this for those who just want try it out for themselves.

With that aside, the Virtual Machine and the toolchain are very much functional. Although, the programs may seem quite crude, in their output, they are pretty usable.

<h2>Requirements</h2>

A Linux distro (preferably Ubuntu, since this was compiled on Ubuntu 14.04) and a 64-bit x86 CPU. Since this release is a full-blown release, you would need OpenGL support (or similar) as well.

Of course, I'm working on non-GL releases, and releases for other platforms as well.

<h2>Setting up</h2>

The tar file for this release contains four directories, "_rxvm_", "_rcc_" , "_ircbot_" and "_lib_". The "_rxvm_" directory contains the "_init_" program, the font file, the R3X standard library ("_rstdlib.so_"), and the VM executable "_rxvm_".

You can put this directory anywhere, since the VM uses "_readlink(2)_" to get it's executable path, the program is relocatable.

After you have chosen your VM's directory, simply export it to your $PATH in your .bashrc as:
```bash
export PATH=$PATH:"<directory of your vm>"
```

The "_rcc_" directory contains the VM toolchain. This includes:
* t++ - The compiler frontend
* tbc - The compiler backend
* readrex - Executable information dumping tool
* rexdump - Disassembler
* cgen - CRC32 Checksum Generation tool
* fasm - Flat Assembler (used as backend)
* /libR3X/ - Required architecture assembly files for FASM.
* /include/ - Contains include headers for rstdlib.

Once you have copied the files to the their destination, you have to add two new environment variables, since the compiler uses a different mechanism than the VM. (__Note that all of those files and directories must be in the same location!__)

```bash
# Export the compiler path as RX_PREFIX
export RX_PREFIX="<directory of your compiler>" 
# Export the standard header include directory as STDLIB_R3X
export STDLIB_R3X="<directory of your compiler>/include"
# Now add RX_PREFIX to PATH so that we can execute the compiler directly from the shell, anywhere
export PATH=$PATH:$RX_PREFIX
```
Now you're done!

The "_ircbot_" directory contains an example of a simple IRC bot, which sends message to the #rxvm channel on irc.freenode.net, and then receives messages and prints them to screen. Compile instructions are given in the comments.

The "_lib_" directory contains binaries for libraries required to build a native library (a dynamic library), which can be used by R3X programs. It also contains an "_include_" directory which has the header files for the libraries.

<h2>Going further</h2>

You can refer to the docs directory, (in the repository) for the technical details of the VM and the programming language. Have fun!

![IRC bot running on R3X VM](http://i.imgur.com/0Rh7GoM.png)

<h2>License</h2>

R3X is liencsed under the New BSD License.
