; Generated by Luiji's Tiny BASIC Compiler

include 'libR3X/libR3X.pkg'
.text {
function main



	; debug line 1

	; debug line 2
	loadr R1, 1
	pushr R0
	pushr R1
	loadr R0, vi
	stosd
	popr R1
	popr R0

	; debug line 3
	loadr R1, 1
	pushr R0
	pushr R1
	loadr R0, vx
	stosd
	popr R1
	popr R0

	; debug line 4
	loadr R1, 0
	pushr R0
	pushr R1
	loadr R0, vy
	stosd
	popr R1
	popr R0

	; debug line 5
while0:
	loadrm dword, R1, vi
	loadrr R4, R1
	loadr R1, 10
	cmpr R4, R1
	jg endwhile0

	; debug line 6
	loadr R1, s0
	call print_s
	loadrm dword, R1, vi
	call print_i
	call print_t
	loadrm dword, R1, vx
	call print_i
	call print_n

	; debug line 8
	loadrm dword, R1, vx
	pushr R0
	pushr R1
	loadr R0, vz
	stosd
	popr R1
	popr R0

	; debug line 9
	loadrm dword, R1, vx
	pushr R1
	loadrm dword, R1, vy
	popr R2
	pushr R1
	pushr R2
	add
	popr R1
	pop
	pop

	pushr R0
	pushr R1
	loadr R0, vx
	stosd
	popr R1
	popr R0

	; debug line 10
	loadrm dword, R1, vz
	pushr R0
	pushr R1
	loadr R0, vy
	stosd
	popr R1
	popr R0

	; debug line 11
	loadrm dword, R1, vi
	pushr R1
	loadr R1, 1
	popr R2
	pushr R1
	pushr R2
	add
	popr R1
	pop
	pop

	pushr R0
	pushr R1
	loadr R0, vi
	stosd
	popr R1
	popr R0

	; debug line 13
	jmp while0
endwhile0:

	; debug line 14
	.data \{ mystr : db 'Thank You!', 0 \}

	; debug line 15
	push mystr

	; debug line 16
	syscall SYSCALL_PUTS

	; debug line 17
	jmp _exit
endfunction main

	; exit to operating system
	; program falls through to here when there is no explicit end
_exit:
	Console.WaitKey
	System.Quit 0

	; print an integer to the terminal
	print_i:
	pushr R1
	syscall SYSCALL_PUTI
	popr R1
	ret

	; print string to terminal
	print_s:
	pushr R1
	syscall SYSCALL_PUTS
	popr R1
	ret

	; print a tab to the terminal
	print_t:
	push 0x09
	syscall SYSCALL_PUTCH
	pop
	ret

	; print a newline to the terminal
	print_n:
	push 0x0A
	syscall SYSCALL_PUTCH
	pop
	ret

; input_i excluded
	; Open a file
	open_f:
	pushr R1
	syscall SYSCALL_OPENSTREAM
	popr R1
	pop
	ret

}
.bss {

	vi: rd 1
	vx: rd 1
	vy: rd 1
	vz: rd 1
}
.data {

	s0: db "FIB: ", 0
}
end
; Task Completed -- Assemble with FASM 
