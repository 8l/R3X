; Generated by Luiji's Tiny BASIC Compiler

include 'libR3X/libR3X.pkg'
.text {
function main



	; debug line 1
	loadr R1, s0
	call print_s
	call print_n

	; debug line 2

	; debug line 3
	loadr R1, 4
	pushr R0
	pushr R1
	call alloc_n
	loadr R0, vs
	stosd
	popr R1
	popr R0

	; debug line 4

	; debug line 5
	loadrm dword, R1, vs
	loadrr R5, R1
	loadr R1, 41089340
	pushr R0
	loadrr R0, R5
	stosd
	popr R0


	; debug line 6
	loadrm dword, R1, vs
	pushr R0
	loadrr R0, R1
	lodsb
	popr R0

	pushr R0
	pushr R1
	loadr R0, vx
	stosd
	popr R1
	popr R0

	; debug line 7
	loadr R1, s1
	call print_s
	loadrm dword, R1, vx
	call print_i
	call print_t
	loadrm dword, R1, vs
	pushr R0
	loadrr R0, R1
	lodsd
	popr R0

	call print_i
	call print_n

	; debug line 8
	jmp _exit
endfunction main

	; exit to operating system
	; program falls through to here when there is no explicit end
_exit:
	Console.WaitKey
	System.Quit 0

	; print an integer to the terminal
	print_i:
	pushr R1
	syscall SYSCALL_PUTI
	popr R1
	ret

	; print string to terminal
	print_s:
	pushr R1
	syscall SYSCALL_PUTS
	popr R1
	ret

	; print a tab to the terminal
	print_t:
	push 0x09
	syscall SYSCALL_PUTCH
	pop
	ret

	; print a newline to the terminal
	print_n:
	push 0x0A
	syscall SYSCALL_PUTCH
	pop
	ret

; input_i excluded
; Allocate n bytes of memory
alloc_n:
	pushr R1
	syscall SYSCALL_ALLOC
	popr R1
	pop
	ret

}
.bss {

	vs: rd 1
	vx: rd 1
}
.data {

	s0: db "Array stuff", 0
	s1: db "S[0] = ", 0
}
end
; Task Completed -- Assemble with FASM 
